{"remainingRequest":"/home/runner/work/CF12_228142/CF12_228142/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF12_228142/CF12_228142/node_modules/ecored-base-pkg/src/components/DialogoActividad.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/CF12_228142/CF12_228142/node_modules/ecored-base-pkg/src/components/DialogoActividad.vue","mtime":499162500000},{"path":"/home/runner/work/CF12_228142/CF12_228142/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF12_228142/CF12_228142/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF12_228142/CF12_228142/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF12_228142/CF12_228142/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF12_228142/CF12_228142/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBBdWRpbyBmcm9tICcuL0F1ZGlvLnZ1ZScKaW1wb3J0IGRpYWxvZ29NaXhpbnMgZnJvbSAnLi4vbWl4aW5zL2RpbG9nb01peGlucycKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEaWFsb2dvQWN0aXZpZGFkJywKICBjb21wb25lbnRzOiB7CiAgICBBdWRpbywKICB9LAogIG1peGluczogW2RpYWxvZ29NaXhpbnNdLAogIHByb3BzOiB7CiAgICBkaWFsb2dvOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHt9KSwKICAgIH0sCiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgdWlkOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCAqKiAxMCksCiAgICB0b3VjaFNjcmVlbjogZmFsc2UsCiAgICBkcmFnSWQ6IG51bGwsCiAgICBkcm9wSWQ6IG51bGwsCiAgICBhbnN3ZXJzOiB7fSwKICAgIHRyYW5zbGF0aW9uczogW10sCiAgICBzY29yZTogbnVsbCwKICB9KSwKICBjb21wdXRlZDogewogICAgZGlhbG9nb0NvbXB1dGVkKCkgewogICAgICByZXR1cm4gdGhpcy5kaWFsb2dvTWVyZ2UodGhpcy5kaWFsb2dvLCB0cnVlKQogICAgfSwKICAgIHdvcmRzKCkgewogICAgICByZXR1cm4gdGhpcy5zaHVmZmxlKAogICAgICAgIHRoaXMuZGlhbG9nb0NvbXB1dGVkCiAgICAgICAgICAubWFwKGxpbmUgPT4gKHsgcGFsYWJyYTogbGluZS5wYWxhYnJhLCBpZDogbGluZS5pZCB9KSkKICAgICAgICAgIC5maWx0ZXIobGluZSA9PiBsaW5lLnBhbGFicmEpLAogICAgICApCiAgICB9LAogICAgYW5zd2VyV29yZHNJZHMoKSB7CiAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuYW5zd2VycykubWFwKGFuc3dlciA9PiBhbnN3ZXIuZHJhZ0lkKQogICAgfSwKICAgIHdvcmRzVG9TaG93KCkgewogICAgICByZXR1cm4gdGhpcy53b3Jkcy5maWx0ZXIod29yZCA9PiAhdGhpcy5hbnN3ZXJXb3Jkc0lkcy5pbmNsdWRlcyh3b3JkLmlkKSkKICAgIH0sCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy50b3VjaFNjcmVlbiA9ICdvbnRvdWNoc3RhcnQnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudAogIH0sCiAgbWV0aG9kczogewogICAgLy8gRFJBRyBFVkVOVFMKICAgIG9uU3RhcnREcmFnKGRyYWdJZCkgewogICAgICB0aGlzLmRyYWdJZCA9IGRyYWdJZAogICAgfSwKICAgIG9uRW5kRHJhZygpIHsKICAgICAgdGhpcy5kcmFnSWQgPSBudWxsCiAgICB9LAogICAgb25Ecm9wKGRyb3BJZCkgewogICAgICBpZiAoIXRoaXMuZHJhZ0lkKSByZXR1cm4KICAgICAgdGhpcy4kc2V0KHRoaXMuYW5zd2VycywgZHJvcElkLCB7CiAgICAgICAgZHJhZ0lkOiB0aGlzLmRyYWdJZCwKICAgICAgICBkcm9wSWQ6IGRyb3BJZCwKICAgICAgICBwYWxhYnJhOiB0aGlzLndvcmRzLmZpbmQod29yZE9iaiA9PiB3b3JkT2JqLmlkID09PSB0aGlzLmRyYWdJZCkucGFsYWJyYSwKICAgICAgfSkKICAgICAgdGhpcy5kcm9wSWQgPSBudWxsCiAgICB9LAogICAgb25EcmFnRW50ZXIoZHJvcElkKSB7CiAgICAgIHRoaXMuZHJvcElkID0gZHJvcElkCiAgICB9LAogICAgb25EcmFnTGVhdmUoKSB7CiAgICAgIHRoaXMuZHJvcElkID0gbnVsbAogICAgfSwKICAgIC8vIFRPVUNIIEVWRU5UUwogICAgb25Ub3VjaFN0YXJ0KGRyYWdJZCkgewogICAgICBjb25zdCBkcmFnRWxtID0gdGhpcy4kcmVmc1tgd29yZC0ke2RyYWdJZH1gXVswXQogICAgICBkcmFnRWxtLmNsYXNzTGlzdC5hZGQoJ3RvdWNoLWRyYWcnKQogICAgfSwKICAgIG9uVG91Y2hNb3ZlKGV2ZW50LCBkcmFnSWQpIHsKICAgICAgY29uc3QgZHJhZ0VsbSA9IHRoaXMuJHJlZnNbYHdvcmQtJHtkcmFnSWR9YF1bMF0KICAgICAgY29uc3QgZHJhZ0VsbVJlY3QgPSBkcmFnRWxtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpCiAgICAgIGNvbnN0IHRvdWNoID0gZXZlbnQudG91Y2hlc1swXQogICAgICBkcmFnRWxtLnN0eWxlLnRvcCA9IGAke3RvdWNoLmNsaWVudFkgLSBkcmFnRWxtUmVjdC5oZWlnaHQgLyAyfXB4YAogICAgICBkcmFnRWxtLnN0eWxlLmxlZnQgPSBgJHt0b3VjaC5jbGllbnRYIC0gZHJhZ0VsbVJlY3Qud2lkdGggLyAyfXB4YAogICAgfSwKICAgIG9uVG91Y2hFbmQoZXZlbnQsIGRyYWdJZCkgewogICAgICBpZiAoZXZlbnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoID4gMSkgewogICAgICAgIHRoaXMucmVzZXREcmFnRWxtKGRyYWdJZCkKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBjb25zdCBjb250RWxtID0gdGhpcy4kcmVmc1tgY2hhdC0ke3RoaXMudWlkfWBdCiAgICAgIGNvbnN0IGNvbnRFbG1SZWN0ID0gY29udEVsbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKQogICAgICBjb25zdCB0b3VjaCA9IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdCiAgICAgIGNvbnN0IGlzSW5zaWRlQ29udFggPQogICAgICAgIHRvdWNoLmNsaWVudFggPiBjb250RWxtUmVjdC54ICYmCiAgICAgICAgdG91Y2guY2xpZW50WCA8IGNvbnRFbG1SZWN0LnggKyBjb250RWxtUmVjdC53aWR0aAogICAgICBjb25zdCBpc0luc2lkZUNvbnRZID0KICAgICAgICB0b3VjaC5jbGllbnRZID4gY29udEVsbVJlY3QueSAmJgogICAgICAgIHRvdWNoLmNsaWVudFkgPCBjb250RWxtUmVjdC55ICsgY29udEVsbVJlY3QuaGVpZ2h0CgogICAgICBpZiAoIWlzSW5zaWRlQ29udFggfHwgIWlzSW5zaWRlQ29udFkpIHsKICAgICAgICB0aGlzLnJlc2V0RHJhZ0VsbShkcmFnSWQpCiAgICAgICAgcmV0dXJuCiAgICAgIH0KCiAgICAgIGxldCBkcm9wSWQKICAgICAgY29uc3QgaXNUb3VjaGluZyA9IHRoaXMud29yZHMuc29tZSh3b3JkT2JqID0+IHsKICAgICAgICBjb25zdCBkcm9wID0gdGhpcy4kcmVmc1tgcGhyYXNlLSR7d29yZE9iai5pZH1gXVswXQogICAgICAgIGNvbnN0IGRyb3BSZWN0ID0gZHJvcC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKQogICAgICAgIGNvbnN0IGV4dHJhRHJvcCA9IDI1CiAgICAgICAgY29uc3QgaXNJbnNpZGVYID0KICAgICAgICAgIHRvdWNoLmNsaWVudFggPiBkcm9wUmVjdC54IC0gZXh0cmFEcm9wICYmCiAgICAgICAgICB0b3VjaC5jbGllbnRYIDwgZHJvcFJlY3QueCArIGRyb3BSZWN0LndpZHRoICsgZXh0cmFEcm9wCiAgICAgICAgY29uc3QgaXNJbnNpZGVZID0KICAgICAgICAgIHRvdWNoLmNsaWVudFkgPiBkcm9wUmVjdC55IC0gZXh0cmFEcm9wICYmCiAgICAgICAgICB0b3VjaC5jbGllbnRZIDwgZHJvcFJlY3QueSArIGRyb3BSZWN0LmhlaWdodCArIGV4dHJhRHJvcAoKICAgICAgICBpZiAoaXNJbnNpZGVYICYmIGlzSW5zaWRlWSkgewogICAgICAgICAgZHJvcElkID0gd29yZE9iai5pZAogICAgICAgIH0KICAgICAgICByZXR1cm4gaXNJbnNpZGVYICYmIGlzSW5zaWRlWQogICAgICB9KQogICAgICBpZiAoaXNUb3VjaGluZykgewogICAgICAgIHRoaXMuJHNldCh0aGlzLmFuc3dlcnMsIGRyb3BJZCwgewogICAgICAgICAgZHJhZ0lkOiBkcmFnSWQsCiAgICAgICAgICBkcm9wSWQ6IGRyb3BJZCwKICAgICAgICAgIHBhbGFicmE6IHRoaXMud29yZHMuZmluZCh3b3JkT2JqID0+IHdvcmRPYmouaWQgPT09IGRyYWdJZCkucGFsYWJyYSwKICAgICAgICB9KQogICAgICB9CiAgICAgIHRoaXMucmVzZXREcmFnRWxtKGRyYWdJZCkKICAgIH0sCiAgICBvblRvdWNoQ2FuY2VsKGRyYWdJZCkgewogICAgICB0aGlzLnJlc2V0RHJhZ0VsbShkcmFnSWQpCiAgICB9LAogICAgcmVzZXREcmFnRWxtKGlkKSB7CiAgICAgIGNvbnN0IGRyYWdFbG0gPSB0aGlzLiRyZWZzW2B3b3JkLSR7aWR9YF1bMF0KICAgICAgZHJhZ0VsbS5jbGFzc0xpc3QucmVtb3ZlKCd0b3VjaC1kcmFnJykKICAgIH0sCiAgICAvLyBIRUxQRVJTCiAgICB0b2dnbGVUcmFuc2xhdGUoaWQpIHsKICAgICAgaWYgKHRoaXMudHJhbnNsYXRpb25zLmluY2x1ZGVzKGlkKSkgewogICAgICAgIHRoaXMudHJhbnNsYXRpb25zID0gdGhpcy50cmFuc2xhdGlvbnMuZmlsdGVyKHRJZCA9PiB0SWQgIT09IGlkKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudHJhbnNsYXRpb25zLnB1c2goaWQpCiAgICAgIH0KICAgIH0sCiAgICBvbkNoZWNrKCkgewogICAgICBjb25zdCBmaW5hbENoZWNrID0gT2JqZWN0LnZhbHVlcyh0aGlzLmFuc3dlcnMpLmV2ZXJ5KAogICAgICAgIGFuc3dlciA9PiBhbnN3ZXIuZHJhZ0lkID09PSBhbnN3ZXIuZHJvcElkLAogICAgICApCiAgICAgIHRoaXMuc2NvcmUgPSBmaW5hbENoZWNrID8gJ2FwcHJvdmVkJyA6ICdkaXNhcHByb3ZlZCcKICAgIH0sCiAgICByZXNldCgpIHsKICAgICAgdGhpcy5hbnN3ZXJzID0ge30KICAgICAgdGhpcy5zY29yZSA9IG51bGwKICAgIH0sCiAgICBzaHVmZmxlKGFycmF5KSB7CiAgICAgIGZvciAobGV0IGkgPSBhcnJheS5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7CiAgICAgICAgbGV0IGogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoaSArIDEpKQogICAgICAgIDtbYXJyYXlbaV0sIGFycmF5W2pdXSA9IFthcnJheVtqXSwgYXJyYXlbaV1dCiAgICAgIH0KICAgICAgcmV0dXJuIGFycmF5CiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["DialogoActividad.vue"],"names":[],"mappings":";AAgfile":"DialogoActividad.vue","sourceRoot":"node_modules/ecored-base-pkg/src/components","sourcesContent":["<template lang=\"pug\">\n.dialogo\n  .dialogo__header.px-3.px-lg-4.py-2.py-lg-3\n    .mb-1\n      slot(name=\"nombre-actividad\") Arrastrar y soltar\n    .h3.mb-0 \n      slot(name=\"titulo-actividad\") Titulo de actividad - Completa la conversaci√≥n\n  .px-2.py-3.p-lg-4\n    .row.g-0\n      .col-md-8.dialogo__chat(:ref=\"`chat-${uid}`\")\n        .row.g-0.flex-nowrap.dialogo__chat__item.mb-3(v-for=\"(line, lineIdx) in dialogoComputed\")\n          .col-auto.dialogo__chat__item__person\n            img(:src=\"line.personaje.img\")\n            span.text-small(v-html=\"line.personaje.nombre\")\n          .col.dialogo__chat__item__message__container\n            .dialogo__chat__item__message\n              .row.g-0.align-items-center.dialogo__chat__item__message__bubble.dialogo__chat__item__message__bubble--tail\n                .col.dialogo__chat__item__message__text.me-2\n                  .dialogo__chat__item__message__text__eng.h5.mb-0\n                    template(v-for=\"(phrase, phraseIdx) in line.textoIng\")\n                      .d-inline.dialogo__chat__item__message__text__drop(\n                        v-if=\"phrase === '*'\"\n                        @drop.prevent=\"onDrop(line.id)\" \n                        @dragenter.prevent=\"onDragEnter(line.id)\"\n                        @dragleave.prevent=\"onDragLeave()\"\n                        @dragover.prevent\n                        :key=\"`phrase-${line.id}-${phraseIdx}`\"\n                        :ref=\"`phrase-${line.id}`\"\n                        :class=\"{'is-active': dropId === line.id}\"\n                      )\n                        span.dialogo__chat__item__message__text__drop__response(\n                          v-if=\"answers[line.id]\"\n                          v-html=\"answers[line.id].palabra\"\n                        )\n                        span.dialogo__chat__item__message__text__drop__default(v-else)\n                      span(v-else :key=\"`phrase-${line.id}-${phraseIdx}`\" v-html=\"phrase\")\n                  .dialogo__chat__item__message__text__esp.text-small(\n                    v-if=\"translations.includes(line.id)\"\n                  )\n                    hr.my-2\n                    template(v-for=\"phrase in line.textoEsp\")\n                      .d-inline.dialogo__chat__item__message__text__drop(\n                        v-if=\"phrase === '*'\"\n                      )\n                        span.dialogo__chat__item__message__text__drop__default\n                      span(v-else v-html=\"phrase\")\n                .col-auto.dialogo__chat__item__message__audio\n                  Audio(\n                    :audio=\"line.audio\"\n                    @audio-hover=\"mostrarIndicadorAudio = false\"\n                  )\n              .d-flex.justify-content-end.me-3\n                button.dialogo__chat__item__message__translate-btn.text-small(\n                  @click=\"toggleTranslate(line.id)\"\n                ) Ver traducci√≥n\n          .col-1\n      .col-12.d-md-none\n        hr.mb-3.mt-4\n      .col.dialogo__words\n        .dialogo__words__content\n          .dialogo__words__content__explanation \n            slot(name=\"descripcion-actividad\") Arrastra y suelta las palabras en la conversaci√≥n\n          .dialogo__words__content__words__container.mt-md-3.mb-3.mb-md-0(v-if=\"wordsToShow.length\")\n            template(v-if=\"touchScreen\")\n              .h5.dialogo__words__word(\n                v-for=\"word in wordsToShow\"\n                :key=\"`word-${word.id}`\"\n                :ref=\"`word-${word.id}`\"\n                @touchstart.prevent=\"onTouchStart(word.id)\" \n                @touchmove.prevent=\"onTouchMove($event,word.id)\"\n                @touchend.prevent=\"onTouchEnd($event,word.id)\"\n                @touchcancel.prevent=\"onTouchCancel($event,word.id)\"\n                :class=\"{'grabbing': word.id === dragId}\"\n                v-html=\"word.palabra\"\n              )\n            template(v-else)\n              .h5.dialogo__words__word(\n                v-for=\"word in wordsToShow\"\n                :key=\"`word-${word.id}`\"\n                @dragstart=\"onStartDrag(word.id)\"\n                @dragend=\"onEndDrag()\"\n                draggable\n                :class=\"{'grabbing': word.id === dragId}\"\n                v-html=\"word.palabra\"\n              )\n        .dialogo__words__footer\n          .dialogo__score.mt-3(v-if=\"score\")\n            .dialogo__score.p-3.approved(v-if=\"score === 'approved'\")\n              .row.align-items-center\n                .col-2\n                  .dialogo__score__icon\n                    img(src=\"@/assets/template/green-check.svg\")\n                .col\n                  slot.dialogo__score__text.h5.mb-0(name=\"feedback-correcto\") ¬°Muy bien!\n\n            .dialogo__score.px-3.py-2.disapproved(v-if=\"score === 'disapproved'\")\n              .row.align-items-center\n                .col-2\n                  .dialogo__score__icon\n                    img(src=\"@/assets/template/red-x.svg\")\n                .col\n                  slot.dialogo__score__text.h5.mb-0(name=\"feedback-incorrecto\") Incorrecto\n\n          .dialogo__words__footer__actions.text-end.mt-3(\n            v-if=\"Object.values(answers).length === words.length\"\n          )\n            button(v-if=\"score === null\" @click=\"onCheck\") Comprobar\n            button(v-else-if=\"score === 'disapproved'\" @click=\"reset\") Prueba otra vez\n\n</template>\n\n<script>\nimport Audio from './Audio.vue'\nimport dialogoMixins from '../mixins/dilogoMixins'\nexport default {\n  name: 'DialogoActividad',\n  components: {\n    Audio,\n  },\n  mixins: [dialogoMixins],\n  props: {\n    dialogo: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  data: () => ({\n    uid: Math.floor(Math.random() * 10 ** 10),\n    touchScreen: false,\n    dragId: null,\n    dropId: null,\n    answers: {},\n    translations: [],\n    score: null,\n  }),\n  computed: {\n    dialogoComputed() {\n      return this.dialogoMerge(this.dialogo, true)\n    },\n    words() {\n      return this.shuffle(\n        this.dialogoComputed\n          .map(line => ({ palabra: line.palabra, id: line.id }))\n          .filter(line => line.palabra),\n      )\n    },\n    answerWordsIds() {\n      return Object.values(this.answers).map(answer => answer.dragId)\n    },\n    wordsToShow() {\n      return this.words.filter(word => !this.answerWordsIds.includes(word.id))\n    },\n  },\n  created() {\n    this.touchScreen = 'ontouchstart' in document.documentElement\n  },\n  methods: {\n    // DRAG EVENTS\n    onStartDrag(dragId) {\n      this.dragId = dragId\n    },\n    onEndDrag() {\n      this.dragId = null\n    },\n    onDrop(dropId) {\n      if (!this.dragId) return\n      this.$set(this.answers, dropId, {\n        dragId: this.dragId,\n        dropId: dropId,\n        palabra: this.words.find(wordObj => wordObj.id === this.dragId).palabra,\n      })\n      this.dropId = null\n    },\n    onDragEnter(dropId) {\n      this.dropId = dropId\n    },\n    onDragLeave() {\n      this.dropId = null\n    },\n    // TOUCH EVENTS\n    onTouchStart(dragId) {\n      const dragElm = this.$refs[`word-${dragId}`][0]\n      dragElm.classList.add('touch-drag')\n    },\n    onTouchMove(event, dragId) {\n      const dragElm = this.$refs[`word-${dragId}`][0]\n      const dragElmRect = dragElm.getBoundingClientRect()\n      const touch = event.touches[0]\n      dragElm.style.top = `${touch.clientY - dragElmRect.height / 2}px`\n      dragElm.style.left = `${touch.clientX - dragElmRect.width / 2}px`\n    },\n    onTouchEnd(event, dragId) {\n      if (event.changedTouches.length > 1) {\n        this.resetDragElm(dragId)\n        return\n      }\n      const contElm = this.$refs[`chat-${this.uid}`]\n      const contElmRect = contElm.getBoundingClientRect()\n      const touch = event.changedTouches[0]\n      const isInsideContX =\n        touch.clientX > contElmRect.x &&\n        touch.clientX < contElmRect.x + contElmRect.width\n      const isInsideContY =\n        touch.clientY > contElmRect.y &&\n        touch.clientY < contElmRect.y + contElmRect.height\n\n      if (!isInsideContX || !isInsideContY) {\n        this.resetDragElm(dragId)\n        return\n      }\n\n      let dropId\n      const isTouching = this.words.some(wordObj => {\n        const drop = this.$refs[`phrase-${wordObj.id}`][0]\n        const dropRect = drop.getBoundingClientRect()\n        const extraDrop = 25\n        const isInsideX =\n          touch.clientX > dropRect.x - extraDrop &&\n          touch.clientX < dropRect.x + dropRect.width + extraDrop\n        const isInsideY =\n          touch.clientY > dropRect.y - extraDrop &&\n          touch.clientY < dropRect.y + dropRect.height + extraDrop\n\n        if (isInsideX && isInsideY) {\n          dropId = wordObj.id\n        }\n        return isInsideX && isInsideY\n      })\n      if (isTouching) {\n        this.$set(this.answers, dropId, {\n          dragId: dragId,\n          dropId: dropId,\n          palabra: this.words.find(wordObj => wordObj.id === dragId).palabra,\n        })\n      }\n      this.resetDragElm(dragId)\n    },\n    onTouchCancel(dragId) {\n      this.resetDragElm(dragId)\n    },\n    resetDragElm(id) {\n      const dragElm = this.$refs[`word-${id}`][0]\n      dragElm.classList.remove('touch-drag')\n    },\n    // HELPERS\n    toggleTranslate(id) {\n      if (this.translations.includes(id)) {\n        this.translations = this.translations.filter(tId => tId !== id)\n      } else {\n        this.translations.push(id)\n      }\n    },\n    onCheck() {\n      const finalCheck = Object.values(this.answers).every(\n        answer => answer.dragId === answer.dropId,\n      )\n      this.score = finalCheck ? 'approved' : 'disapproved'\n    },\n    reset() {\n      this.answers = {}\n      this.score = null\n    },\n    shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1))\n        ;[array[i], array[j]] = [array[j], array[i]]\n      }\n      return array\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\"></style>\n"]}]}